{"version":3,"file":"static/js/597.d116cb70.chunk.js","mappings":"+SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAmB,mCAAG,WAAMC,GAAN,uFACVH,EAAAA,EAAAA,IAAU,sBAAuB,CACtDG,OAAQA,EACRC,OAAQ,CACNC,QAASJ,KAJoB,cAC3BK,EAD2B,yBAO1BA,EAASC,MAPiB,2CAAH,sDAUnBC,EAAW,mCAAG,WAAOL,EAAQM,GAAf,uFACFT,EAAAA,EAAAA,IAAU,gBAAiB,CAChDG,OAAQA,EACRC,OAAQ,CACNC,QAASJ,EACTQ,MAAOA,KALc,cACnBH,EADmB,yBAQlBA,EAASC,MARS,2CAAH,wDAWXG,EAAiB,mCAAG,WAAOP,EAAQQ,GAAf,uFACRX,EAAAA,EAAAA,IAAA,iBAAoBY,OAAOD,IAAa,CAC7DR,OAAQA,EACRC,OAAQ,CACNC,QAASJ,KAJkB,cACzBK,EADyB,yBAOxBA,EAASC,MAPe,2CAAH,wDAUjBM,EAAc,mCAAG,WAAOV,EAAQQ,GAAf,uFACLX,EAAAA,EAAAA,IAAA,iBAAoBY,OAAOD,GAA3B,YAAgD,CACrER,OAAQA,EACRC,OAAQ,CACNC,QAASJ,KAJe,cACtBK,EADsB,yBAOrBA,EAASC,MAPY,2CAAH,wDAUdO,EAAiB,mCAAG,WAAOX,EAAQQ,GAAf,uFACRX,EAAAA,EAAAA,IAAA,iBAAoBY,OAAOD,GAA3B,YAAgD,CACrER,OAAQA,EACRC,OAAQ,CACNC,QAASJ,KAJkB,cACzBK,EADyB,yBAOxBA,EAASC,MAPe,2CAAH,uD,iHCU9B,UAnDa,WACX,IAAQQ,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KA0BA,OAxBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,IAAIC,gBACjBnB,EAASkB,EAAWlB,OAFZ,wCAId,8GAEgCU,EAAAA,EAAAA,IAAeV,EAAQY,GAFvD,OAEUQ,EAFV,OAGIJ,EAAQI,EAAcL,MAH1B,mDAK0B,aAAlB,KAAMM,QALd,wBAMMC,QAAQC,MAAR,MANN,2BASIC,EAAAA,GAAAA,MAAY,iDAThB,0DAJc,sBAmBd,OAnBc,mCAiBdC,GAEO,WACLP,EAAWQ,OACZ,CACF,GAAE,CAACd,KAGF,iCACE,SAAC,KAAD,CAASe,SAAS,YAAYC,cAAc,KAC5C,8BACE,wBACGb,EAAKc,KAAI,SAAAC,GAAK,OACb,0BACGA,EAAMC,eACL,gBACEC,IAAG,0CAAqCF,EAAMC,cAC9CE,IAAKH,EAAMI,iBAGf,wBAAKJ,EAAMI,iBACX,uCAAeJ,EAAMK,eARdL,EAAMM,GADF,UAgBxB,C","sources":["api.js","components/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '64941d9c048dcb2fddefbcc98313b7a0';\n\nexport const fetchTrendingMovies = async signal => {\n  const response = await axios.get('/trending/movie/day', {\n    signal: signal,\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n};\n\nexport const fetchMovies = async (signal, query) => {\n  const response = await axios.get('/search/movie', {\n    signal: signal,\n    params: {\n      api_key: API_KEY,\n      query: query,\n    },\n  });\n  return response.data;\n};\n\nexport const fetchMovieDetails = async (signal, movie_id) => {\n  const response = await axios.get(`/movie/${Number(movie_id)}`, {\n    signal: signal,\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n};\n\nexport const fetchMovieCast = async (signal, movie_id) => {\n  const response = await axios.get(`/movie/${Number(movie_id)}/credits`, {\n    signal: signal,\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n};\n\nexport const fetchMovieReviews = async (signal, movie_id) => {\n  const response = await axios.get(`/movie/${Number(movie_id)}/reviews`, {\n    signal: signal,\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n};\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { fetchMovieCast } from 'api';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const controller = new AbortController();\n    const signal = controller.signal;\n\n    async function getMovieCast() {\n      try {\n        const moviesCastAPI = await fetchMovieCast(signal, movieId);\n        setCast(moviesCastAPI.cast);\n      } catch (error) {\n        if (error.message === 'canceled') {\n          console.error(error);\n          return;\n        }\n        toast.error(\"Movies's Cast not found. Please try it again.\");\n      }\n    }\n\n    getMovieCast();\n\n    return () => {\n      controller.abort();\n    };\n  }, [movieId]);\n\n  return (\n    <>\n      <Toaster position=\"top-right\" reverseOrder={false} />\n      <section>\n        <ul>\n          {cast.map(actor => (\n            <li key={actor.id}>\n              {actor.profile_path && (\n                <img\n                  src={`https://image.tmdb.org/t/p/w200/${actor.profile_path}`}\n                  alt={actor.original_name}\n                />\n              )}\n              <h3>{actor.original_name}</h3>\n              <p>Character: {actor.character}</p>\n            </li>\n          ))}\n        </ul>\n      </section>\n    </>\n  );\n};\n\nexport default Cast;\n"],"names":["axios","API_KEY","fetchTrendingMovies","signal","params","api_key","response","data","fetchMovies","query","fetchMovieDetails","movie_id","Number","fetchMovieCast","fetchMovieReviews","movieId","useParams","useState","cast","setCast","useEffect","controller","AbortController","moviesCastAPI","message","console","error","toast","getMovieCast","abort","position","reverseOrder","map","actor","profile_path","src","alt","original_name","character","id"],"sourceRoot":""}