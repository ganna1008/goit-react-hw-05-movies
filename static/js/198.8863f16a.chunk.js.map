{"version":3,"file":"static/js/198.8863f16a.chunk.js","mappings":"+SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAmB,mCAAG,WAAMC,GAAN,uFACVH,EAAAA,EAAAA,IAAU,sBAAuB,CACtDG,OAAQA,EACRC,OAAQ,CACNC,QAASJ,KAJoB,cAC3BK,EAD2B,yBAO1BA,EAASC,MAPiB,2CAAH,sDAUnBC,EAAW,mCAAG,WAAOL,EAAQM,GAAf,uFACFT,EAAAA,EAAAA,IAAU,gBAAiB,CAChDG,OAAQA,EACRC,OAAQ,CACNC,QAASJ,EACTQ,MAAOA,KALc,cACnBH,EADmB,yBAQlBA,EAASC,MARS,2CAAH,wDAWXG,EAAiB,mCAAG,WAAOP,EAAQQ,GAAf,uFACRX,EAAAA,EAAAA,IAAA,iBAAoBY,OAAOD,IAAa,CAC7DR,OAAQA,EACRC,OAAQ,CACNC,QAASJ,KAJkB,cACzBK,EADyB,yBAOxBA,EAASC,MAPe,2CAAH,wDAUjBM,EAAc,mCAAG,WAAOV,EAAQQ,GAAf,uFACLX,EAAAA,EAAAA,IAAA,iBAAoBY,OAAOD,GAA3B,YAAgD,CACrER,OAAQA,EACRC,OAAQ,CACNC,QAASJ,KAJe,cACtBK,EADsB,yBAOrBA,EAASC,MAPY,2CAAH,wDAUdO,EAAiB,mCAAG,WAAOX,EAAQQ,GAAf,uFACRX,EAAAA,EAAAA,IAAA,iBAAoBY,OAAOD,GAA3B,YAAgD,CACrER,OAAQA,EACRC,OAAQ,CACNC,QAASJ,KAJkB,cACzBK,EADyB,yBAOxBA,EAASC,MAPe,2CAAH,uD,sJC3CjBQ,EAAqB,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,MAC3C,OACE,wBACGD,EAAOE,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAAMC,GAAE,iBAAYD,EAAME,IAAMJ,MAAOA,EAAvC,SACGE,EAAMG,SAFFH,EAAME,GADA,KAStB,E,SCiCD,EA1Ca,WACX,OAA4CE,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACMC,GAAWC,EAAAA,EAAAA,MA0BjB,OAxBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,IAAIC,gBACjB3B,EAAS0B,EAAW1B,OAFZ,wCAId,8GAE4BD,EAAAA,EAAAA,IAAoBC,GAFhD,OAEU4B,EAFV,OAGIN,EAAkBM,EAAUC,SAHhC,mDAK0B,aAAlB,KAAMC,QALd,wBAMMC,QAAQC,MAAR,MANN,2BASIC,EAAAA,GAAAA,MAAY,0CAThB,0DAJc,sBAmBd,OAnBc,mCAiBdC,GAEO,WACLR,EAAWS,OACZ,CACF,GAAE,KAGD,iCACE,SAAC,KAAD,CAASC,SAAS,YAAYC,cAAc,KAC5C,6BACE,4CACA,SAACzB,EAAD,CACEC,OAAQQ,EACRP,MAAO,CAAEwB,KAAMf,UAKxB,C","sources":["api.js","components/TrendingMoviesList.jsx","pages/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '64941d9c048dcb2fddefbcc98313b7a0';\n\nexport const fetchTrendingMovies = async signal => {\n  const response = await axios.get('/trending/movie/day', {\n    signal: signal,\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n};\n\nexport const fetchMovies = async (signal, query) => {\n  const response = await axios.get('/search/movie', {\n    signal: signal,\n    params: {\n      api_key: API_KEY,\n      query: query,\n    },\n  });\n  return response.data;\n};\n\nexport const fetchMovieDetails = async (signal, movie_id) => {\n  const response = await axios.get(`/movie/${Number(movie_id)}`, {\n    signal: signal,\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n};\n\nexport const fetchMovieCast = async (signal, movie_id) => {\n  const response = await axios.get(`/movie/${Number(movie_id)}/credits`, {\n    signal: signal,\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n};\n\nexport const fetchMovieReviews = async (signal, movie_id) => {\n  const response = await axios.get(`/movie/${Number(movie_id)}/reviews`, {\n    signal: signal,\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n};\n","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nexport const TrendingMoviesList = ({ movies, state }) => {\n  return (\n    <ul>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <Link to={`movies/${movie.id}`} state={state}>\n            {movie.title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nTrendingMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n  state: PropTypes.shape({\n    from: PropTypes.shape({\n      pathname: PropTypes.string.isRequired,\n      search: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { fetchTrendingMovies } from 'api';\nimport { TrendingMoviesList } from 'components/TrendingMoviesList';\nimport { useLocation } from 'react-router-dom';\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    const controller = new AbortController();\n    const signal = controller.signal;\n\n    async function getTrendingMovies() {\n      try {\n        const moviesAPI = await fetchTrendingMovies(signal);\n        setTrendingMovies(moviesAPI.results);\n      } catch (error) {\n        if (error.message === 'canceled') {\n          console.error(error);\n          return;\n        }\n        toast.error('Movies not found. Please try it again.');\n      }\n    }\n\n    getTrendingMovies();\n\n    return () => {\n      controller.abort();\n    };\n  }, []);\n\n  return (\n    <>\n      <Toaster position=\"top-right\" reverseOrder={false} />\n      <main>\n        <h1>Trending today</h1>\n        <TrendingMoviesList\n          movies={trendingMovies}\n          state={{ from: location }}\n        />\n      </main>\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["axios","API_KEY","fetchTrendingMovies","signal","params","api_key","response","data","fetchMovies","query","fetchMovieDetails","movie_id","Number","fetchMovieCast","fetchMovieReviews","TrendingMoviesList","movies","state","map","movie","to","id","title","useState","trendingMovies","setTrendingMovies","location","useLocation","useEffect","controller","AbortController","moviesAPI","results","message","console","error","toast","getTrendingMovies","abort","position","reverseOrder","from"],"sourceRoot":""}